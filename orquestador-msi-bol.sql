-- Crear esquema si no existe
CREATE SCHEMA IF NOT EXISTS data;

-- Tabla: journal_contable
CREATE TABLE data.journal_contable (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  periodo VARCHAR(50),
  id_contable VARCHAR(100),
  codificador VARCHAR(100),
  no_journal VARCHAR(100),
  boa VARCHAR(100),
  razon_journal TEXT,
  documento_elaborador VARCHAR(100),
  documento_autorizacion VARCHAR(100),
  fecha_creacion TIMESTAMP,
  estado VARCHAR(50),
  log_proceso TEXT,
  json_original JSON,
  json_transformado JSON
);

-- Tabla: transacciones_contables
CREATE TABLE data.transacciones_contables (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  journal_id INT,
  line INT,
  layout_id VARCHAR(100),
  transaction_ref VARCHAR(100),
  currency VARCHAR(10),
  date DATE,
  description TEXT,
  account_code VARCHAR(50),
  transaction_amount DECIMAL(18,2),
  memo_amount DECIMAL(18,2),
  l1_cost_centre VARCHAR(100),
  l2_funder VARCHAR(100),
  l3_project VARCHAR(100),
  l4_donor_reporting_line VARCHAR(100),
  l5_tax VARCHAR(100),
  l6_supplier VARCHAR(100)
);

-- Tabla: procesos_orquestador
CREATE TABLE data.procesos_orquestador (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  tipo_documento VARCHAR(50),
  fecha_proceso TIMESTAMP,
  fuente VARCHAR(100),
  json JSON,
  status VARCHAR(50),
  mensaje_error TEXT,
  sistema_destino VARCHAR(100),
  fecha_envio TIMESTAMP,
  respuesta_api JSON
);

-- Tabla: usuarios
CREATE TABLE data.usuarios (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre VARCHAR(100),
  email VARCHAR(100) UNIQUE,
  rol VARCHAR(50),
  password_hash VARCHAR(255),
  estado INT,
  creado_en TIMESTAMP
);

-- Tabla: logs_acceso
CREATE TABLE data.logs_acceso (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  usuario_id INT,
  timestamp TIMESTAMP,
  ip VARCHAR(50),
  evento VARCHAR(100),
  descripcion TEXT
);

-- Tabla: permisos_usuarios
CREATE TABLE data.permisos_usuarios (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  usuario_id INT,
  modulo VARCHAR(100),
  permiso VARCHAR(50)
);

-- Tabla: conexiones_externas
CREATE TABLE data.conexiones_externas (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nombre_sistema VARCHAR(100),
  tipo_sistema VARCHAR(100),
  url_base VARCHAR(255),
  metodo_autenticacion VARCHAR(100),
  credenciales JSON,
  headers JSON,
  activo BOOLEAN,
  creado_en TIMESTAMP,
  actualizado_en TIMESTAMP
);

CREATE TABLE data.tokens_api (
  id SERIAL PRIMARY KEY,
  sistema VARCHAR(50),          -- "CRS"
  token TEXT NOT NULL,
  expiracion TIMESTAMP NOT NULL,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



-- Foreign Keys
ALTER TABLE data.transacciones_contables
  ADD CONSTRAINT fk_journal FOREIGN KEY (journal_id)
  REFERENCES data.journal_contable (id);

ALTER TABLE data.logs_acceso
  ADD CONSTRAINT fk_logs_usuario FOREIGN KEY (usuario_id)
  REFERENCES data.usuarios (id);

ALTER TABLE data.permisos_usuarios
  ADD CONSTRAINT fk_perm_usuario FOREIGN KEY (usuario_id)
  REFERENCES data.usuarios (id);

